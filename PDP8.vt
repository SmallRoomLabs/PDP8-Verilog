`timescale 100ns/10ns

module PDP8_tb();
    reg SYSCLK=0;
    reg reset=0, clear=0, run=0, halt=0;
    // wire [11:0] dutBusPC, dutBusData;
    // wire instAND, instTAD, instISZ, instDCA, instJMS, instJMP, instIOT, instOPR;

    PDP8 dut(
        .SYSCLK(SYSCLK),
        .sw_RESET(reset),
        .sw_CLEAR(clear),
        .sw_RUN(run), 
        .sw_HALT(halt)
    );
    
  reg [20:0] cnt=0;

    always begin
        #1 SYSCLK<=~SYSCLK;
    end

    // Clear/reset the entire system
    initial begin 
        reset=1; #5 reset=0; 
    end  
    
    initial begin 
        #10 run=1; #5 run=0; 
    end

    initial begin
        $dumpfile("PDP8.vcd");
        $dumpvars(0,PDP8_tb);
        #200000 begin $display("DONE after %d instructions",cnt); $finish; end
    end

//    always @(dut.theSEQUENCER.stepCnt) begin
    always @(dut.SYSCLK) begin
        if (dut.theSEQUENCER.stepCnt==5'd30) begin $display("Unhandled OP"); $finish; end
        if (dut.theSEQUENCER.stepCnt==5'd1 && dut.SYSCLK==0) begin:PRN    
        cnt<=cnt+1;
//      if ((cnt%1000)==0) $display("%d",cnt);
 `ifdef TRACE
            $display("[%04o] IRQ,DLY,IE=%d,%d,%d L/AC:%d/%04o MQ:%04o IR:%04o",
                dut.thePC.PCLAT,
                dut.theInterrupt.irqRq, dut.theInterrupt.IEdly1|dut.theInterrupt.IEdly2, dut.theInterrupt.IE,
                dut.link,
                dut.theACC.data,
                dut.theMQ.data,
                dut.busIR 
            );

    `endif
            if ((dut.theSEQUENCER.running==1'b1) && (dut.theACC.data[0:0]===1'bx)) begin $display("X in theACC.data"); $finish; end
            if ((dut.theSEQUENCER.running==1'b1) && (dut.theACC.data[0:0]===1'bz)) begin $display("Z in theACC.data"); $finish; end
        end
            if (dut.theSEQUENCER.stepCnt==5'd8 & dut.busIR==12'o7402) begin $display("end by HLT after %d instructions",cnt); $finish; end
//        if ((dut.theSEQUENCER.running==1'b1) && ($countbits(dut.busData,'x)>0)) begin $display("X in dut.busRamD"); $finish; end

    end
    

endmodule
